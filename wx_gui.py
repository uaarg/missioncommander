#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.7.2 on Sat Oct 22 21:18:10 2016
#

import wx

# begin wxGlade: dependencies
import gettext
import interopclient
from time import sleep
# end wxGlade

# begin wxGlade: extracode
# end wxGlade



class MyFrame(wx.Frame):
    def __init__(self,*args, **kwds):
        # begin wxGlade: MyFrame.__init__
        wx.Frame.__init__(self, *args, **kwds)

    def load_data(self, passw="", usern="", url=""):
        self.label_1 = wx.StaticText(self, wx.ID_ANY, "IP Address")
        self.text_baseurl = wx.TextCtrl(self, wx.ID_ANY, url)
        self.label_2 = wx.StaticText(self, wx.ID_ANY, "Username")
        self.text_username = wx.TextCtrl(self, wx.ID_ANY, usern)
        self.label_3 = wx.StaticText(self, wx.ID_ANY, "password")
        self.text_password = wx.TextCtrl(self, wx.ID_ANY, passw)
        self.connect_btn = wx.ToggleButton(self, wx.ID_ANY, "connect")
        self.disconnect_btn = wx.ToggleButton(self, wx.ID_ANY, "disconnect")
        self.Status = wx.StaticText(self, wx.ID_ANY, "DISCONNECTED", style=wx.ALIGN_CENTER_HORIZONTAL)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TOGGLEBUTTON, self.cnt_hdlr, self.connect_btn)
        self.Bind(wx.EVT_TOGGLEBUTTON, self.dcnt_hdlr, self.disconnect_btn)
        self.Bind(wx.EVT_CLOSE, self._when_closed)
        # end wxGlade
        self.interopavail = False
        self.Centre()
        self.Show()


    def _when_closed(self, event):
        self.mc.interopSD = True
        self.mc.telinfoavailable = True
        sleep(.25)
        self.mc.ivylink.shutdown()
        self.mc.objectdeletion()
        self.Destroy()


    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("Mission Commander")
        self.SetSize((400, 608))
        self.text_baseurl.SetMinSize((200, 45))
        self.text_password.SetMinSize((200, 45))
        self.text_username.SetMinSize((200, 45))
        self.Status.SetMinSize((150, 33))
        self.Status.SetBackgroundColour(wx.Colour(255, 255, 255))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(3, 1, 4, 4)
        grid_sizer_4 = wx.GridSizer(1, 1, 2, 2)
        grid_sizer_3 = wx.GridSizer(1, 2, 2, 2)
        grid_sizer_2 = wx.GridSizer(3, 2, 2, 2)
        grid_sizer_2.Add(self.label_1, 0, 0, 0)
        grid_sizer_2.Add(self.text_baseurl, 0, 0, 0)
        grid_sizer_2.Add(self.label_2, 0, 0, 0)
        grid_sizer_2.Add(self.text_username, 0, 0, 0)
        grid_sizer_2.Add(self.label_3, 0, 0, 0)
        grid_sizer_2.Add(self.text_password, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, 0, 0)
        grid_sizer_3.Add(self.connect_btn, 0, 0, 0)
        grid_sizer_3.Add(self.disconnect_btn, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_3, 1, 0, 0)
        grid_sizer_4.Add(self.Status, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.LEFT | wx.TOP, 0)
        grid_sizer_1.Add(grid_sizer_4, 1, 0, 0)
        sizer_1.Add(grid_sizer_1, 1, 0, 10)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def cnt_hdlr(self, event):  # wxGlade: MyFrame.<event_handler>
        self.mc.telinfoavailable = False
        self.connect_to_interop()
        event.Skip()

    def dcnt_hdlr(self, event):  # wxGlade: MyFrame.<event_handler>
        self.mc.interopSD = True
        self.mc.telinfoavailable = True
        self.Status.SetLabelText("Disconnected")
        self.connect_btn.SetValue(False)
        self.disconnect_btn.SetValue(True)
        event.Skip()

    def bindmc(self,mcobject):
        self.mc = mcobject

    def connect_to_interop(self):
        self.connect_btn.SetValue(True)
        self.disconnect_btn.SetValue(False)
        self.Status.SetLabelText("Connecting")
        self.Status.SetBackgroundColour("ORANGE")
        if self.interopavail == False:
            self.interoplink = interopclient.Connection(self.text_baseurl.GetValue(),self.text_username.GetValue(),self.text_password.GetValue())
            self.interopavail = self.interoplink.loginsucess
        if self.interopavail == True:
            self.Status.SetLabelText("Connected")
            self.Status.SetOwnBackgroundColour("GREEN")
            self.mc.startINTEROP(self.interoplink)
        else:
            self.Status.SetLabelText("Failed")
            self.connect_btn.SetValue(False)
            self.disconnect_btn.SetValue(True)

# end of class MyFrame
